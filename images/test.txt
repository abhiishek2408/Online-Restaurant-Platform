 <?php if (isset($_SESSION['user'])): ?>
            <div class="user-info">
                <h3>Hello, <?php echo htmlspecialchars($_SESSION['user']['username']); ?>!</h3>
                <p>You are logged in as a <?php echo htmlspecialchars($_SESSION['user']['role']); ?>.</p>
            </div>
        <?php else: ?>
            <p>You are not logged in.</p>
        <?php endif; ?>




















        <?php
session_start();
include('config/db.php'); // Include database configuration file

// Check if the user is logged in
if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

// Get logged-in user's ID
$user_id = $_SESSION['user_id'];

// Fetch user data from the database
$sql = "SELECT * FROM users WHERE user_id = $user_id";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();
} else {
    echo "User not found.";
    exit;
}

// Handle update requests
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $updatedField = $_POST['field'];
    $updatedValue = $_POST['value'];

    $stmt = $conn->prepare("UPDATE users SET $updatedField = ? WHERE user_id = ?");
    $stmt->bind_param('si', $updatedValue, $user_id);
    $stmt->execute();

    if ($stmt->affected_rows > 0) {
        echo json_encode(['success' => true, 'message' => 'Updated successfully.']);
    } else {
        echo json_encode(['success' => false, 'message' => 'No changes made.']);
    }
    exit();
}

$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Profile</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
            color: #333;
        }

        .profile-container {
            max-width: 600px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
        }

        .profile-pic{
            position: relative;
            left: 40%;
        }

        .profile-img {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid #FF7518;
            margin-bottom: 15px;
        }

        .profile-row {
            margin-bottom: 20px;
            display: flex;
            flex-direction: column;
            position: relative;
        }

        .profile-row label {
            font-size: 14px;
            color: #555;
            margin-bottom: 5px;
        }

        .profile-row span {
            font-size: 16px;
            color: #333;
            cursor: pointer;
            padding: 5px;
            display: inline-block;
            background-color: #f9f9f9;
            border-radius: 6px;
            transition: background-color 0.3s ease;
        }

        .profile-row span:hover {
            background-color: #ff7518;
            color: white;
        }

        .profile-row input,
        .profile-row textarea {
            font-size: 16px;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 6px;
            width: 100%;
            display: none;
            background-color: #f9f9f9;
            transition: all 0.3s ease;
        }

        .profile-row .save-icon {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 18px;
            cursor: pointer;
            color: #FF7518;
            display: none;
        }

        .profile-row .tick-icon {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 18px;
            cursor: default;
            color: green;
            display: none;
        }

        .profile-row input:focus,
        .profile-row textarea:focus {
            border-color: #FF7518;
        }

        .save-animation {
            animation: tick 0.5s forwards;
        }

        @keyframes tick {
            0% {
                transform: scale(0);
                opacity: 0;
            }
            100% {
                transform: scale(1);
                opacity: 1;
            }
        }

    </style>
</head>
<body>

<div class="profile-container">
    
    <div class="profile-pic">
        <h2>My Profile</h2>
    <?php if (!empty($user['profile_img'])): ?>
        <img src="data:image/jpeg;base64,<?php echo base64_encode($user['profile_img']); ?>" class="profile-img" alt="Profile Image">
    <?php else: ?>
        <img src="path/to/default-image.jpg" alt="Default Image" class="profile-img"> <!-- Placeholder image -->
    <?php endif; ?>
    </div>
    <div class="profile-row">
        <label for="username">Username</label>
        <span id="username-display"><?php echo htmlspecialchars($user['username']); ?></span>
        <input type="text" id="username" value="<?php echo htmlspecialchars($user['username']); ?>">
        <i class="save-icon" onclick="saveChanges('username')">&#x2705;</i> <!-- Checkmark icon -->
        <i class="tick-icon">&#x2714;</i> <!-- Green tick animation -->
    </div>

    <div class="profile-row">
        <label for="email">Email</label>
        <span id="email-display"><?php echo htmlspecialchars($user['email']); ?></span>
        <input type="email" id="email" value="<?php echo htmlspecialchars($user['email']); ?>">
        <i class="save-icon" onclick="saveChanges('email')">&#x2705;</i> <!-- Checkmark icon -->
        <i class="tick-icon">&#x2714;</i> <!-- Green tick animation -->
    </div>

    <div class="profile-row">
        <label for="phone">Phone</label>
        <span id="phone-display"><?php echo htmlspecialchars($user['phone']); ?></span>
        <input type="text" id="phone" value="<?php echo htmlspecialchars($user['phone']); ?>">
        <i class="save-icon" onclick="saveChanges('phone')">&#x2705;</i> <!-- Checkmark icon -->
        <i class="tick-icon">&#x2714;</i> <!-- Green tick animation -->
    </div>

    <div class="profile-row">
        <label for="address">Address</label>
        <span id="address-display"><?php echo htmlspecialchars($user['address']); ?></span>
        <input type="text" id="address" value="<?php echo htmlspecialchars($user['address']); ?>">
        <i class="save-icon" onclick="saveChanges('address')">&#x2705;</i> <!-- Checkmark icon -->
        <i class="tick-icon">&#x2714;</i> <!-- Green tick animation -->
    </div>

    <div class="profile-row">
        <label for="bio">Bio</label>
        <span id="bio-display"><?php echo htmlspecialchars($user['bio']); ?></span>
        <textarea id="bio" rows="3"><?php echo htmlspecialchars($user['bio']); ?></textarea>
        <i class="save-icon" onclick="saveChanges('bio')">&#x2705;</i> <!-- Checkmark icon -->
        <i class="tick-icon">&#x2714;</i> <!-- Green tick animation -->
    </div>
</div>

<script>
    // Function to switch to edit mode
    document.querySelectorAll('.profile-row span').forEach(span => {
        span.addEventListener('click', function () {
            const row = this.parentElement;
            row.querySelector('span').style.display = 'none'; // Hide text
            row.querySelector('input, textarea').style.display = 'block'; // Show input
            row.querySelector('.save-icon').style.display = 'inline'; // Show save icon
        });
    });

    // Save changes
    function saveChanges(field) {
        const row = document.querySelector(`#${field}-display`).parentElement;
        const input = row.querySelector('input, textarea');
        const value = input.value;

        // Send the updated data to the server
        fetch('', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: `field=${field}&value=${encodeURIComponent(value)}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                row.querySelector(`#${field}-display`).textContent = value; // Update the display value
                row.querySelector('span').style.display = 'inline'; // Show text
                input.style.display = 'none'; // Hide input field
                row.querySelector('.save-icon').style.display = 'none'; // Hide save icon
                const tickIcon = row.querySelector('.tick-icon');
                tickIcon.style.display = 'inline'; // Show tick icon
                tickIcon.classList.add('save-animation');
                setTimeout(() => tickIcon.style.display = 'none', 1000); // Hide tick after animation
            } else {
                alert('Failed to save changes.');
            }
        })
        .catch(error => console.error('Error:', error));
    }

    // Close edit mode if click outside
    document.addEventListener('click', function (e) {
        if (!e.target.closest('.profile-row')) {
            document.querySelectorAll('.profile-row input, .profile-row textarea').forEach(input => {
                input.style.display = 'none';
            });
            document.querySelectorAll('.profile-row .save-icon').forEach(icon => {
                icon.style.display = 'none';
            });
            document.querySelectorAll('.profile-row .tick-icon').forEach(tick => {
                tick.style.display = 'none';
            });
            document.querySelectorAll('.profile-row span').forEach(span => {
                span.style.display = 'inline';
            });
        }
    });
</script>

</body>
</html>
